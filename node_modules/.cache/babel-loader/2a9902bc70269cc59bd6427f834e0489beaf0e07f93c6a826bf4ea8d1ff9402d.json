{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Attach/Web/React/viivakoodi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FinnishBankUtils from 'finnish-bank-utils'; // Make sure this import is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IbanForm() {\n  _s();\n  // Initialize states with empty values for user input\n  const [iban, setIban] = useState('');\n  const [sum, setSum] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [referenceNumber, setReferenceNumber] = useState('');\n  const [validationState, setValidationState] = useState('');\n  const [barcode, setBarcode] = useState('');\n  const [error, setError] = useState('');\n  const handleIbanChange = e => {\n    setIban(e.target.value);\n    setValidationState(''); // Reset validation state when the user changes the input\n    setError(''); // Clear any previous error\n  };\n\n  const validateAndGenerateBarcode = () => {\n    const isValidIban = FinnishBankUtils.isValidFinnishIBAN(iban);\n    setValidationState(isValidIban ? 'is-valid' : 'is-invalid');\n    if (!isValidIban) {\n      setError('Invalid IBAN');\n      return;\n    }\n    const parsedSum = parseFloat(sum);\n    if (isNaN(parsedSum)) {\n      setError('Invalid sum. Please enter a valid number.');\n      return;\n    }\n    try {\n      const generatedBarcode = FinnishBankUtils.formatFinnishVirtualBarCode({\n        iban,\n        sum: parsedSum,\n        reference: referenceNumber,\n        date: dueDate // Assumed format: DD.MM.YYYY\n      });\n\n      if (generatedBarcode) {\n        setBarcode(generatedBarcode);\n        setError(''); // Clear any previous error if barcode generation is successful\n      } else {\n        setError('Barcode generation failed. Please check the input values.');\n      }\n    } catch (error) {\n      setError('An error occurred during barcode generation.');\n      console.error(\"Error generating barcode:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"IBAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control ${validationState}`,\n        value: iban,\n        onChange: handleIbanChange,\n        placeholder: \"Enter IBAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Sum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\" // Changed to accept decimal inputs\n        ,\n        className: \"form-control\",\n        value: sum,\n        onChange: e => setSum(e.target.value),\n        placeholder: \"Enter Sum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Due Date (DD.MM.YYYY)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        placeholder: \"Enter Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Reference Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: referenceNumber,\n        onChange: e => setReferenceNumber(e.target.value),\n        placeholder: \"Enter Reference Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: validateAndGenerateBarcode,\n      children: \"Generate Barcode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), barcode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Barcode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-break\",\n        children: barcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(IbanForm, \"X/IvcjFU/xQuEnWE8N499vEPIWU=\");\n_c = IbanForm;\nexport default IbanForm;\nvar _c;\n$RefreshReg$(_c, \"IbanForm\");","map":{"version":3,"names":["React","useState","FinnishBankUtils","jsxDEV","_jsxDEV","IbanForm","_s","iban","setIban","sum","setSum","dueDate","setDueDate","referenceNumber","setReferenceNumber","validationState","setValidationState","barcode","setBarcode","error","setError","handleIbanChange","e","target","value","validateAndGenerateBarcode","isValidIban","isValidFinnishIBAN","parsedSum","parseFloat","isNaN","generatedBarcode","formatFinnishVirtualBarCode","reference","date","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Attach/Web/React/viivakoodi/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FinnishBankUtils from 'finnish-bank-utils'; // Make sure this import is correct\n\nfunction IbanForm() {\n  // Initialize states with empty values for user input\n  const [iban, setIban] = useState('');\n  const [sum, setSum] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [referenceNumber, setReferenceNumber] = useState('');\n  const [validationState, setValidationState] = useState('');\n  const [barcode, setBarcode] = useState('');\n  const [error, setError] = useState('');\n\n  const handleIbanChange = (e) => {\n    setIban(e.target.value);\n    setValidationState(''); // Reset validation state when the user changes the input\n    setError(''); // Clear any previous error\n  };\n\n  const validateAndGenerateBarcode = () => {\n    const isValidIban = FinnishBankUtils.isValidFinnishIBAN(iban);\n    setValidationState(isValidIban ? 'is-valid' : 'is-invalid');\n\n    if (!isValidIban) {\n      setError('Invalid IBAN');\n      return;\n    }\n\n    const parsedSum = parseFloat(sum);\n    if (isNaN(parsedSum)) {\n      setError('Invalid sum. Please enter a valid number.');\n      return;\n    }\n\n    try {\n      const generatedBarcode = FinnishBankUtils.formatFinnishVirtualBarCode({\n        iban,\n        sum: parsedSum,\n        reference: referenceNumber,\n        date: dueDate, // Assumed format: DD.MM.YYYY\n      });\n\n      if (generatedBarcode) {\n        setBarcode(generatedBarcode);\n        setError(''); // Clear any previous error if barcode generation is successful\n      } else {\n        setError('Barcode generation failed. Please check the input values.');\n      }\n    } catch (error) {\n      setError('An error occurred during barcode generation.');\n      console.error(\"Error generating barcode:\", error);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"mb-3\">\n        <label className=\"form-label\">IBAN</label>\n        <input \n          type=\"text\" \n          className={`form-control ${validationState}`}\n          value={iban}\n          onChange={handleIbanChange}\n          placeholder=\"Enter IBAN\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Sum</label>\n        <input \n          type=\"text\" // Changed to accept decimal inputs\n          className=\"form-control\"\n          value={sum}\n          onChange={(e) => setSum(e.target.value)}\n          placeholder=\"Enter Sum\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Due Date (DD.MM.YYYY)</label>\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n          placeholder=\"Enter Due Date\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Reference Number</label>\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          value={referenceNumber}\n          onChange={(e) => setReferenceNumber(e.target.value)}\n          placeholder=\"Enter Reference Number\"\n        />\n      </div>\n      {error && (\n        <div className=\"alert alert-danger mt-3\">\n          {error}\n        </div>\n      )}\n      <button \n        className=\"btn btn-primary\" \n        onClick={validateAndGenerateBarcode}\n      >\n        Generate Barcode\n      </button>\n\n      {barcode && (\n        <div className=\"mt-3\">\n          <h3>Generated Barcode:</h3>\n          <p className=\"text-break\">{barcode}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default IbanForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
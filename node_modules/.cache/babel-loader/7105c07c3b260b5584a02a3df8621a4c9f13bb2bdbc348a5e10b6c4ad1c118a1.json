{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Attach/Web/React/viivakoodi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinnishBankUtils = require('finnish-bank-utils');\nfunction IbanForm() {\n  _s();\n  const [iban, setIban] = useState('');\n  const [sum, setSum] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [referenceNumber, setReferenceNumber] = useState('');\n  const [validationState, setValidationState] = useState('');\n  const [barcode, setBarcode] = useState('');\n  const validateAndGenerateBarcode = () => {\n    if (FinnishBankUtils.isValidFinnishIBAN(iban)) {\n      setValidationState('is-valid');\n\n      // Assuming the sum, dueDate, and referenceNumber are valid, generate the barcode\n      const generatedBarcode = FinnishBankUtils.formatFinnishVirtualBarCode({\n        iban: iban,\n        sum: parseFloat(sum),\n        // Convert to a float value\n        reference: referenceNumber,\n        date: dueDate // Date should be in 'DD.MM.YYYY' format\n      });\n\n      setBarcode(generatedBarcode);\n    } else {\n      setValidationState('is-invalid');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://unpkg.com/finnish-bank-utils/finnish-bank-utils.min.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: iban,\n      onChange: e => setIban(e.target.value),\n      className: `form-control ${validationState}`,\n      placeholder: \"Enter IBAN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: sum,\n      onChange: e => setSum(e.target.value),\n      className: \"form-control\",\n      placeholder: \"Enter Sum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value),\n      className: \"form-control\",\n      placeholder: \"Enter Due Date (DD.MM.YYYY)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: referenceNumber,\n      onChange: e => setReferenceNumber(e.target.value),\n      className: \"form-control\",\n      placeholder: \"Enter Reference Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateAndGenerateBarcode,\n      className: \"btn btn-primary\",\n      children: \"Generate Barcode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), barcode && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Barcode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: barcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(IbanForm, \"KDYzydW0uZY/HA9fzesRUiydwaw=\");\n_c = IbanForm;\nexport default IbanForm;\nvar _c;\n$RefreshReg$(_c, \"IbanForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FinnishBankUtils","require","IbanForm","_s","iban","setIban","sum","setSum","dueDate","setDueDate","referenceNumber","setReferenceNumber","validationState","setValidationState","barcode","setBarcode","validateAndGenerateBarcode","isValidFinnishIBAN","generatedBarcode","formatFinnishVirtualBarCode","parseFloat","reference","date","children","src","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","className","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Attach/Web/React/viivakoodi/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst FinnishBankUtils = require('finnish-bank-utils');\n\n\nfunction IbanForm() {\n  const [iban, setIban] = useState('');\n  const [sum, setSum] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [referenceNumber, setReferenceNumber] = useState('');\n  const [validationState, setValidationState] = useState('');\n  const [barcode, setBarcode] = useState('');\n\n  const validateAndGenerateBarcode = () => {\n    if (FinnishBankUtils.isValidFinnishIBAN(iban)) {\n      setValidationState('is-valid');\n\n      // Assuming the sum, dueDate, and referenceNumber are valid, generate the barcode\n      const generatedBarcode = FinnishBankUtils.formatFinnishVirtualBarCode({\n        iban: iban,\n        sum: parseFloat(sum), // Convert to a float value\n        reference: referenceNumber,\n        date: dueDate, // Date should be in 'DD.MM.YYYY' format\n      });\n\n      setBarcode(generatedBarcode);\n    } else {\n      setValidationState('is-invalid');\n    }\n  };\n\n  return (\n    \n    <div>\n      <script src=\"https://unpkg.com/finnish-bank-utils/finnish-bank-utils.min.js\"></script>\n\n      <input \n        type=\"text\" \n        value={iban} \n        onChange={(e) => setIban(e.target.value)} \n        className={`form-control ${validationState}`}\n        placeholder=\"Enter IBAN\"\n      />\n      <input \n        type=\"text\" \n        value={sum} \n        onChange={(e) => setSum(e.target.value)} \n        className=\"form-control\"\n        placeholder=\"Enter Sum\"\n      />\n      <input \n        type=\"text\" \n        value={dueDate} \n        onChange={(e) => setDueDate(e.target.value)} \n        className=\"form-control\"\n        placeholder=\"Enter Due Date (DD.MM.YYYY)\"\n      />\n      <input \n        type=\"text\" \n        value={referenceNumber} \n        onChange={(e) => setReferenceNumber(e.target.value)} \n        className=\"form-control\"\n        placeholder=\"Enter Reference Number\"\n      />\n      <button onClick={validateAndGenerateBarcode} className=\"btn btn-primary\">\n        Generate Barcode\n      </button>\n\n      {barcode && (\n        <div>\n          <h3>Generated Barcode:</h3>\n          <p>{barcode}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default IbanForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
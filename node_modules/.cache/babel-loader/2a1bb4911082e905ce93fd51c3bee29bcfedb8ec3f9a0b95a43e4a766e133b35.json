{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Attach/Web/React/viivakoodi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FinnishBankUtils from 'finnish-bank-utils'; // Make sure this import is correct\nimport Barcode from 'react-barcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IbanForm() {\n  _s();\n  // Initialize states with empty values for user input\n  const [iban, setIban] = useState('');\n  const [sum, setSum] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [validationState, setValidationState] = useState('');\n  const [barcode, setBarcode] = useState('');\n  const [error, setError] = useState('');\n  const barcodeRef = useRef(null);\n  const copyToClipboard = e => {\n    barcodeRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    // Optionally, you can show a tooltip/popover to indicate the text was copied.\n  };\n\n  const handleIbanChange = e => {\n    setIban(e.target.value);\n    setValidationState(''); // Reset validation state when the user changes the input\n    setError(''); // Clear any previous error\n  };\n\n  const validateAndGenerateBarcode = () => {\n    const isValidIban = FinnishBankUtils.isValidFinnishIBAN(iban);\n    setValidationState(isValidIban ? 'is-valid' : 'is-invalid');\n    if (!isValidIban) {\n      setError('Invalid IBAN');\n      return;\n    }\n    const parsedSum = parseFloat(sum);\n    if (isNaN(parsedSum)) {\n      setError('Invalid sum. Please provide a numeric value.');\n      return;\n    }\n\n    // Here you can define a hard-coded or randomly generated reference number\n    const referenceNumber = '55958 22432 94671'; // Example of a hard-coded valid reference number\n\n    // Generate barcode\n    try {\n      const generatedBarcode = FinnishBankUtils.formatFinnishVirtualBarCode({\n        iban: iban,\n        sum: parsedSum,\n        reference: referenceNumber,\n        // Using the hard-coded or randomly generated reference number here\n        date: dueDate\n      });\n      setBarcode(generatedBarcode);\n    } catch (error) {\n      console.error(\"Error generating barcode:\", error);\n      setError('There was an error generating the barcode. Please check your inputs and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ibanField\",\n        className: \"form-label\",\n        children: \"IBAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control ${validationState}`,\n        id: \"ibanField\",\n        value: iban,\n        onChange: handleIbanChange,\n        placeholder: \"Enter IBAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), validationState === 'is-invalid' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: \"Invalid IBAN.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sumField\",\n        className: \"form-label\",\n        children: \"Sum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"sumField\",\n        value: sum,\n        onChange: e => setSum(e.target.value),\n        placeholder: \"Enter Sum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dueDateField\",\n        className: \"form-label\",\n        children: \"Due Date (DD.MM.YYYY)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"dueDateField\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        placeholder: \"Enter Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: validateAndGenerateBarcode,\n        children: \"Generate Barcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), barcode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: barcodeRef,\n        value: barcode,\n        className: \"form-control\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: copyToClipboard,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"barCode\",\n          className: \"form-label\",\n          children: \"Sum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Barcode, {\n          value: barcode,\n          format: \"CODE128\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(IbanForm, \"dPX9OUPb/qso0Xfr/esYd4Ab/3g=\");\n_c = IbanForm;\nexport default IbanForm;\nvar _c;\n$RefreshReg$(_c, \"IbanForm\");","map":{"version":3,"names":["React","useState","useRef","FinnishBankUtils","Barcode","jsxDEV","_jsxDEV","IbanForm","_s","iban","setIban","sum","setSum","dueDate","setDueDate","validationState","setValidationState","barcode","setBarcode","error","setError","barcodeRef","copyToClipboard","e","current","select","document","execCommand","target","focus","handleIbanChange","value","validateAndGenerateBarcode","isValidIban","isValidFinnishIBAN","parsedSum","parseFloat","isNaN","referenceNumber","generatedBarcode","formatFinnishVirtualBarCode","reference","date","console","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","onClick","role","ref","readOnly","format","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Attach/Web/React/viivakoodi/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FinnishBankUtils from 'finnish-bank-utils'; // Make sure this import is correct\nimport Barcode from 'react-barcode';\n\n\nfunction IbanForm() {\n  // Initialize states with empty values for user input\n  const [iban, setIban] = useState('');\n  const [sum, setSum] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [validationState, setValidationState] = useState('');\n  const [barcode, setBarcode] = useState('');\n  const [error, setError] = useState('');\n  const barcodeRef = useRef(null);\n\n  const copyToClipboard = (e) => {\n    barcodeRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    // Optionally, you can show a tooltip/popover to indicate the text was copied.\n  };\n\n  const handleIbanChange = (e) => {\n    setIban(e.target.value);\n    setValidationState(''); // Reset validation state when the user changes the input\n    setError(''); // Clear any previous error\n  };\n\n  const validateAndGenerateBarcode = () => {\n    const isValidIban = FinnishBankUtils.isValidFinnishIBAN(iban);\n    setValidationState(isValidIban ? 'is-valid' : 'is-invalid');\n\n    if (!isValidIban) {\n      setError('Invalid IBAN');\n      return;\n    }\n\n    const parsedSum = parseFloat(sum);\n    if (isNaN(parsedSum)) {\n      setError('Invalid sum. Please provide a numeric value.');\n      return;\n    }\n\n    // Here you can define a hard-coded or randomly generated reference number\n    const referenceNumber = '55958 22432 94671'; // Example of a hard-coded valid reference number\n\n    // Generate barcode\n    try {\n      const generatedBarcode = FinnishBankUtils.formatFinnishVirtualBarCode({\n        iban: iban,\n        sum: parsedSum,\n        reference: referenceNumber, // Using the hard-coded or randomly generated reference number here\n        date: dueDate,\n      });\n      setBarcode(generatedBarcode);\n    } catch (error) {\n      console.error(\"Error generating barcode:\", error);\n      setError('There was an error generating the barcode. Please check your inputs and try again.');\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"ibanField\" className=\"form-label\">IBAN</label>\n        <input \n          type=\"text\"\n          className={`form-control ${validationState}`}\n          id=\"ibanField\"\n          value={iban}\n          onChange={handleIbanChange}\n          placeholder=\"Enter IBAN\"\n        />\n        {validationState === 'is-invalid' && <div className=\"invalid-feedback\">Invalid IBAN.</div>}\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"sumField\" className=\"form-label\">Sum</label>\n        <input \n          type=\"number\" \n          className=\"form-control\"\n          id=\"sumField\"\n          value={sum}\n          onChange={(e) => setSum(e.target.value)}\n          placeholder=\"Enter Sum\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"dueDateField\" className=\"form-label\">Due Date (DD.MM.YYYY)</label>\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          id=\"dueDateField\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n          placeholder=\"Enter Due Date\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <button \n          className=\"btn btn-primary\" \n          onClick={validateAndGenerateBarcode}\n        >\n          Generate Barcode\n        </button>\n      </div>\n  \n      {error && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {error}\n        </div>\n      )}\n  \n  {barcode && (\n        <div className=\"input-group mb-3\">\n          <input \n            type=\"text\"\n            ref={barcodeRef}\n            value={barcode}\n            className=\"form-control\"\n            readOnly\n          />\n          <button \n            className=\"btn btn-outline-secondary\" \n            type=\"button\" \n            onClick={copyToClipboard}\n          >\n            Copy\n          </button>\n          <div className=\"mb-3\">\n          <label htmlFor=\"barCode\" className=\"form-label\">Sum</label>\n\n          <Barcode value={barcode} format=\"CODE128\" />\n        </div>\n        </div>\n        \n      )}\n    </div>\n  );\n  \n}\n\nexport default IbanForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}